<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>