<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        42S3/T4AAAAASUVORK5CYII=
</value>
  </data>
</root>